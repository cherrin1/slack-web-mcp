apiVersion: 2022-10-01
location: eastus
name: slack-mcp-server
properties:
  managedEnvironmentId: /subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.App/managedEnvironments/{environment-name}
  configuration:
    activeRevisionsMode: single
    ingress:
      external: true
      targetPort: 3000
      transport: http
      allowInsecure: false
    secrets:
      - name: slack-client-id
        value: "{your-slack-client-id}"
      - name: slack-client-secret
        value: "{your-slack-client-secret}"
      - name: mcp-secret
        value: "{your-mcp-secret}"
    registries:
      - server: {your-registry}.azurecr.io
        username: {your-registry-username}
        passwordSecretRef: registry-password
  template:
    containers:
      - name: slack-mcp-server
        image: {your-registry}.azurecr.io/slack-mcp-server:latest
        env:
          - name: PORT
            value: "3000"
          - name: SLACK_CLIENT_ID
            secretRef: slack-client-id
          - name: SLACK_CLIENT_SECRET
            secretRef: slack-client-secret
          - name: SLACK_REDIRECT_URI
            value: "https://{your-app-name}.{region}.azurecontainerapps.io/oauth/callback"
          - name: MCP_SECRET
            secretRef: mcp-secret
          - name: NODE_ENV
            value: "production"
        resources:
          cpu: 0.5
          memory: 1.0Gi
        probes:
          - type: liveness
            httpGet:
              path: "/health"
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          - type: readiness
            httpGet:
              path: "/health"
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
    scale:
      minReplicas: 1
      maxReplicas: 3
      rules:
        - name: http-scaling
          http:
            metadata:
              concurrentRequests: "10"
tags:
  Environment: Production
  Service: MCP
  Integration: Slack